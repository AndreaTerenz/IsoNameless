[gd_scene load_steps=8 format=3 uid="uid://bq5xdgw0ai7g0"]

[sub_resource type="GDScript" id="GDScript_queex"]
script/source = "extends CharacterBody3D

@export_range(.01, 20., .005) var TOTAL_SPEED = 5. 
@export_range(.01, 50., .005) var H_SPEED := 5.
@export_range(.01, 20., .005) var JUMP_VELOCITY := 4.5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _input(event):
	if event is InputEventMouseMotion:
		var viewport := get_viewport()
		var mouse_pos = viewport.get_mouse_position()
		var screen_center = viewport.get_visible_rect().size / 2.
		var delta : Vector2 = mouse_pos - screen_center
		
		rotation.y = -delta.angle() + TAU / 8.

func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# Every action is flipped......MMMMMMM
	var input_dir = Input.get_vector(\"right\", \"left\", \"backward\", \"forward\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * H_SPEED
		velocity.z = direction.z * H_SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, H_SPEED)
		velocity.z = move_toward(velocity.z, 0, H_SPEED)
	
	move_and_slide()
	
func rotate_with_mouse(event: InputEventMouseMotion, node: Node3D, sensitivity := .001):
	var tmp = -event.relative * sensitivity
	var event_rel : Vector2 = Vector2(rad_to_deg(tmp.x), rad_to_deg(tmp.y))
	var y_rot = event_rel.x

	node.rotate_y(y_rot)
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_kb6wn"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_gpuet"]

[sub_resource type="GDScript" id="GDScript_o1kn3"]
script/source = "extends Node3D

var initial_rot := Vector3.ZERO

func _ready():
	initial_rot = global_rotation

func _process(delta):
	# Ignore player rotation
	global_rotation = initial_rot
"

[sub_resource type="Gradient" id="Gradient_l33gp"]
offsets = PackedFloat32Array(0.252427, 0.529126, 0.800971, 1)
colors = PackedColorArray(0, 0, 0, 1, 0.944327, 0.944327, 0.944327, 0.0556729, 0.988235, 0.988235, 0.988235, 0, 0.996078, 0.996078, 0.996078, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_oik2g"]
gradient = SubResource("Gradient_l33gp")
use_hdr = true
fill = 1
fill_from = Vector2(0.5, 0.5)

[sub_resource type="CylinderMesh" id="CylinderMesh_fv145"]
top_radius = 0.1
bottom_radius = 0.1
height = 0.4

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_queex")
TOTAL_SPEED = 7.325

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_kb6wn")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_gpuet")

[node name="CameraPivot" type="Node3D" parent="."]
transform = Transform3D(-0.707107, 0.5, 0.5, 0, 0.707107, -0.707107, -0.707107, -0.5, -0.5, 0, 0, 0)
script = SubResource("GDScript_o1kn3")

[node name="Camera3D" type="Camera3D" parent="CameraPivot"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, -4)
projection = 1
size = 10.0
near = 0.002

[node name="AO Decal" type="Decal" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0)
layers = 4
extents = Vector3(0.5, 1.28092, 0.5)
texture_albedo = SubResource("GradientTexture2D_oik2g")
upper_fade = 2.85409
lower_fade = 2.85409
cull_mask = 1048574

[node name="Nose" type="MeshInstance3D" parent="."]
transform = Transform3D(-4.37114e-08, -4.37114e-08, -1, -1, 0, 4.37114e-08, 0, 1, -4.37114e-08, 0, 0.476, 0.499)
mesh = SubResource("CylinderMesh_fv145")
