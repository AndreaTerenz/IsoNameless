[gd_scene load_steps=7 format=3 uid="uid://b8l6lpf100vwb"]

[ext_resource type="PackedScene" uid="uid://knakj6gamdm8" path="res://Scenes/UIs/loading_scene.tscn" id="1_vuduh"]

[sub_resource type="GDScript" id="GDScript_3rbdr"]
script/source = "extends Control

@export_dir var default_levels_dir := \"res://Scenes/Levels\"

@onready var levels_list = %LevelsList
@onready var loading_ui = %LoadingUI

var levels : Array[Dictionary] = []

func _ready():
	Globals.set_cursor_mode(Globals.CURSOR_MODE.NORMAL)
	levels_list.clear()
	
	var l_paths := Utils.ls_directory(default_levels_dir, [\".tscn\", \".scn\"])
	print(l_paths)
	
	for path in l_paths:
		var level_scene : PackedScene = load(path)
		var state : SceneState = level_scene.get_state()
		var root_metas := scenestate_to_root_meta(state, 2)
		
		if not root_metas.has(\"map_name\"):
			continue
		
		var level_data := {
			\"scene\": path,
			\"name\": root_metas[\"map_name\"],
			\"description\": root_metas.get(\"description\", \"\")
		}
		
		levels.append(level_data)
		
		levels_list.add_item(level_data[\"name\"])
		if level_data[\"description\"] != \"\":
			levels_list.set_item_tooltip(levels_list.item_count-1, level_data[\"description\"])
		
func scenestate_to_root_meta(ss: SceneState, max_meta := -1) -> Dictionary:
	if ss.get_node_count() == 0:
		return {}
	
	var count = ss.get_node_property_count(0)
	if count < 2:
		return {}
		
	var output := {}
	var meta_prefix = \"metadata/\"
	
	for i in range(count):
		var pname := ss.get_node_property_name(0, i).to_lower()
		
		if pname.begins_with(meta_prefix):
			var pval = ss.get_node_property_value(0, i)
			
			pname = pname.trim_prefix(meta_prefix)
			output[pname] = pval
			
			if max_meta > 0 and len(output.keys()) >= max_meta:
				break
	
	return output

func _on_quit_btn_pressed():
	get_tree().quit()


func _on_levels_list_item_activated(index):
	print(\"AOAOAOAOAO\")
	var level_data = levels[index]
	loading_ui.path = level_data[\"scene\"]
"

[sub_resource type="LabelSettings" id="LabelSettings_v6l1o"]
font_size = 86
outline_size = 24
outline_color = Color(0.0235294, 0.0235294, 0.0235294, 1)

[sub_resource type="Theme" id="Theme_c25b3"]
ItemList/colors/font_color = Color(1, 1, 1, 1)
ItemList/font_sizes/font_size = 27

[sub_resource type="Theme" id="Theme_yywvp"]
default_font_size = 27

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_w04y3"]
bg_color = Color(0.152941, 0.152941, 0.152941, 0.741176)

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_3rbdr")
metadata/_edit_lock_ = true

[node name="LoadingUI" parent="." instance=ExtResource("1_vuduh")]
unique_name_in_owner = true
z_index = 1
layout_mode = 1

[node name="Label" type="Label" parent="."]
layout_mode = 1
anchors_preset = 10
anchor_right = 1.0
offset_bottom = 20.0
grow_horizontal = 2
text = "IsoNameless"
label_settings = SubResource("LabelSettings_v6l1o")
horizontal_alignment = 1
vertical_alignment = 1

[node name="PanelContainer" type="PanelContainer" parent="."]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -146.0
offset_top = -106.0
offset_right = 146.0
offset_bottom = 106.0
grow_horizontal = 2
grow_vertical = 2
theme = SubResource("Theme_c25b3")

[node name="LevelsList" type="ItemList" parent="PanelContainer"]
unique_name_in_owner = true
layout_mode = 2
item_count = 1
item_0/text = "tuamamma"

[node name="PanelContainer2" type="PanelContainer" parent="."]
layout_mode = 1
anchors_preset = 12
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = -125.0
grow_horizontal = 2
grow_vertical = 0
theme = SubResource("Theme_yywvp")
theme_override_styles/panel = SubResource("StyleBoxFlat_w04y3")

[node name="HBoxContainer" type="HBoxContainer" parent="PanelContainer2"]
layout_mode = 2
theme_override_constants/separation = 20
alignment = 1

[node name="SettingsBtn" type="Button" parent="PanelContainer2/HBoxContainer"]
custom_minimum_size = Vector2(130, 50)
layout_mode = 2
size_flags_vertical = 4
text = "Settings"

[node name="QuitBtn" type="Button" parent="PanelContainer2/HBoxContainer"]
custom_minimum_size = Vector2(130, 50)
layout_mode = 2
size_flags_vertical = 4
text = "Quit"

[connection signal="item_activated" from="PanelContainer/LevelsList" to="." method="_on_levels_list_item_activated"]
[connection signal="pressed" from="PanelContainer2/HBoxContainer/QuitBtn" to="." method="_on_quit_btn_pressed"]
