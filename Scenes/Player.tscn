[gd_scene load_steps=26 format=3 uid="uid://j5tsuu0t3qik"]

[ext_resource type="Script" path="res://Scripts/Player/Player.gd" id="1_qsd5a"]
[ext_resource type="Texture2D" uid="uid://x8dib5g7o24i" path="res://icon.png" id="2_26olt"]
[ext_resource type="Material" uid="uid://0asu4367xipf" path="res://Materials/Grids/red_grid.tres" id="3_ks13a"]
[ext_resource type="Texture2D" uid="uid://djynh8htvq22y" path="res://Assets/fake_AO_decal.png" id="3_s0417"]
[ext_resource type="Material" uid="uid://bgvpmepmf5xgn" path="res://Materials/Grids/purple_grid.tres" id="4_glhws"]
[ext_resource type="PackedScene" uid="uid://cwowhjdlhepqk" path="res://Scenes/UI.tscn" id="4_mdx2w"]
[ext_resource type="Script" path="res://Scripts/Player/PlayerStats.gd" id="5_hi0eq"]
[ext_resource type="Material" uid="uid://cr6t6bvgx0uic" path="res://Materials/Grids/green_grid.tres" id="6_4ucgw"]

[sub_resource type="Curve" id="Curve_vr3k8"]
_data = [Vector2(0, 0.263636), 0.0, 0.0, 0, 0, Vector2(1, 1), 0.442229, 0.0, 0, 0]
point_count = 2

[sub_resource type="CapsuleMesh" id="CapsuleMesh_kb6wn"]

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_pyynk"]
load_path = "res://.godot/imported/Blender_Default_Mixed_Grid.jpg-52fd97d1f493faf574a2115b6a56d053.s3tc.ctex"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_d1gfr"]
transparency = 1
diffuse_mode = 3
albedo_texture = SubResource("CompressedTexture2D_pyynk")
uv1_offset = Vector3(-0.125, 0, 0)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_18b2u"]
render_priority = -1
next_pass = SubResource("StandardMaterial3D_d1gfr")
transparency = 1
no_depth_test = true
shading_mode = 0
diffuse_mode = 3
disable_ambient_light = true
albedo_color = Color(0.952941, 0.858824, 0.611765, 0.376471)

[sub_resource type="CylinderMesh" id="CylinderMesh_tnghl"]
top_radius = 0.2
bottom_radius = 0.2
height = 3.0

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_gpuet"]

[sub_resource type="GDScript" id="GDScript_o1kn3"]
script/source = "extends Node3D

@export_range(0., 1., .001)
var pos_lerp_strength = .85

@export_range(0., 1., .001)
var rot_lerp_strength = .85

var target_rot := 0.

func _ready():
	await Globals.level_started
	target_rot = global_rotation.y
	top_level = true

func _process(delta):
	global_rotation.y = lerp_angle(global_rotation.y, target_rot, 1. - rot_lerp_strength)
	global_position = global_position.lerp(get_parent().global_position, 1. - pos_lerp_strength)

func _input(event):
	var rot_dir := 0.
	
	if Input.is_action_just_pressed(\"rot_left\"):
		rot_dir = -1.
	elif Input.is_action_just_pressed(\"rot_right\"):
		rot_dir = 1.
		
	target_rot += rot_dir * TAU/4.
"

[sub_resource type="GDScript" id="GDScript_3r0yw"]
script/source = "extends Camera3D

var player : Player :
	get:
		if not Globals.player:
			await Globals.player_set
		return Globals.player
var dist_to_player : float :
	get:
		return global_position.distance_to(player.global_position)

func get_mouse_ray(length := 1.) -> Array[Vector3]:
	var mouse_pos := get_viewport().get_mouse_position()
	var from := project_ray_origin(mouse_pos)
	var to := project_position(mouse_pos, length)
	
	return [from, to]

func mouse_ground_projection() -> Vector3:
	var mouse_ray := get_mouse_ray(dist_to_player + 15.)
	var A := mouse_ray[0]
	var B := mouse_ray[1]
	
	var P : Vector3 = player.global_position
	var N : Vector3 = (Vector3.UP)
	
	# FIXME : Check if point is actually reachable
	
	var output = Utils.isect_line_plane_v3(A,B,P,N)
	
	return output

func get_mouse_rotation() -> float:
	var viewport := get_viewport()
	var mouse_pos = viewport.get_mouse_position()
	var screen_size := viewport.get_visible_rect().size
	var screen_center = screen_size / 2.
	var mouse_delta : Vector2 = screen_center - mouse_pos
	
	return -mouse_delta.angle() + TAU / 8.
"

[sub_resource type="Shader" id="Shader_fewc4"]
code = "shader_type canvas_item;

uniform sampler2D text : hint_default_transparent;
uniform float strength : hint_range(0.0, 1.0, 0.01) = .5;

void fragment() {
	float val = texture(text, SCREEN_UV).a;
	COLOR.a = (1. - val) * strength;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ianme"]
resource_local_to_scene = true
shader = SubResource("Shader_fewc4")
shader_parameter/strength = 0.5
shader_parameter/text = ExtResource("2_26olt")

[sub_resource type="GDScript" id="GDScript_c1r1e"]
script/source = "extends SubViewportContainer

@export_range(0., 1., .001)
var fx_strength := .7

@onready
var viewport := $SubViewport

var run := false
var current_fact := 0.

func _ready():
	var mat : ShaderMaterial = material as ShaderMaterial
	mat.set_shader_parameter(\"text\", viewport.get_texture())
	mat.set_shader_parameter(\"strength\", 0.)

func _process(_delta):
	if run:
		var door = Globals.player.current_door
		current_fact = clampf(1. - door.get_player_depth(), 0., fx_strength)
		
		var mat : ShaderMaterial = material as ShaderMaterial
		mat.set_shader_parameter(\"strength\", current_fact)

func _on_player_entered_door(_d):
	visible = true
	run = true


func _on_player_exited_door(_d):
	run = false
	
"

[sub_resource type="GDScript" id="GDScript_8giqv"]
script/source = "extends Camera3D

func _process(_delta):
	global_transform = %Camera.global_transform
"

[sub_resource type="Gradient" id="Gradient_uujw2"]
offsets = PackedFloat32Array(0, 0.532819, 0.745174, 0.837838, 0.895753, 0.942085, 1)
colors = PackedColorArray(0.254902, 0.956863, 0.113725, 0.427451, 0.254902, 0.956863, 0.113725, 0.427451, 0.266667, 1, 0.12, 1, 0, 0, 0, 1, 0.357143, 0.357143, 0.357143, 0.357143, 0.643137, 0.643137, 0.643137, 0, 0.835294, 0.835294, 0.835294, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_2wbcu"]
gradient = SubResource("Gradient_uujw2")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(0.910256, 0.222222)

[sub_resource type="GDScript" id="GDScript_c6h3w"]
script/source = "extends Node

signal dialogue_start(other)
signal dialogue_end

var player : Player = null
var interact_ray = null
var camera : Camera3D = null
var talking_to : NPC = null :
	get:
		return talking_to
	set(new_val):
		talking_to = new_val
		if talking_to:
			dialogue_start.emit(talking_to)
		else:
			dialogue_end.emit()
var enabled := false

func _ready():
	if not Globals.player:
		await Globals.player_set
		
	player = Globals.player
	interact_ray = player.interact_ray
	camera = player.camera

func _input(_event):
	if enabled:
		if Input.is_action_just_pressed(\"fire\"):
			interact()
				
func interact():
	var ray_length = camera.dist_to_player + 15.
	var m_ray : Array[Vector3] = camera.get_mouse_ray(ray_length)
	
	var from = m_ray[0]
	var to = m_ray[1]
	
	var interactable = interact_ray.check(from, to)
	if interactable:
		interactable.interact()
		
		if interactable.get_parent() is NPC:
			talking_to = interactable.get_parent()
			talking_to.dialogue_done.connect(
				func ():
					talking_to = null
			)

func _on_player_mode_changed(md):
	enabled = (md != Player.MODE.DIALOGUE)
"

[sub_resource type="GDScript" id="GDScript_pbuh2"]
script/source = "extends RayCast3D

func check(from, to):
	global_position = from
	target_position = to_local(to)
	
	force_raycast_update()
	
	var coll = get_collider() as Interactable
	if coll and coll.player_inside:
		return coll
		
	return null
"

[node name="Player" type="CharacterBody3D"]
script = ExtResource("1_qsd5a")
H_SPEED_CURVE = SubResource("Curve_vr3k8")

[node name="Body" type="MeshInstance3D" parent="."]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
gi_mode = 2
mesh = SubResource("CapsuleMesh_kb6wn")
surface_material_override/0 = SubResource("StandardMaterial3D_18b2u")

[node name="DBAxes" type="Node3D" parent="Body"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1, 0)
visible = false

[node name="Y" type="MeshInstance3D" parent="Body/DBAxes"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("CylinderMesh_tnghl")
skeleton = NodePath("../../..")
surface_material_override/0 = ExtResource("6_4ucgw")

[node name="X" type="MeshInstance3D" parent="Body/DBAxes"]
transform = Transform3D(-4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0, 1, 1, 0, 0)
mesh = SubResource("CylinderMesh_tnghl")
skeleton = NodePath("../../..")
surface_material_override/0 = ExtResource("3_ks13a")

[node name="Z" type="MeshInstance3D" parent="Body/DBAxes"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 1)
mesh = SubResource("CylinderMesh_tnghl")
skeleton = NodePath("../../..")
surface_material_override/0 = ExtResource("4_glhws")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
shape = SubResource("CapsuleShape3D_gpuet")

[node name="CameraPivot" type="Node3D" parent="."]
unique_name_in_owner = true
transform = Transform3D(-0.707107, 0.5, 0.5, 0, 0.707107, -0.707107, -0.707107, -0.5, -0.5, 0, 0, 0)
script = SubResource("GDScript_o1kn3")

[node name="Camera" type="Camera3D" parent="CameraPivot"]
unique_name_in_owner = true
transform = Transform3D(-1, 8.9407e-08, -1.78814e-07, 8.9407e-08, 1, -3.8743e-07, 1.49012e-07, -1.19209e-07, -1, -3.8147e-06, -1.90735e-06, -23.5273)
projection = 1
size = 14.0
near = 0.001
far = 280.04
script = SubResource("GDScript_3r0yw")

[node name="OutsideFade" type="SubViewportContainer" parent="CameraPivot"]
material = SubResource("ShaderMaterial_ianme")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
stretch = true
script = SubResource("GDScript_c1r1e")

[node name="SubViewport" type="SubViewport" parent="CameraPivot/OutsideFade"]
transparent_bg = true
handle_input_locally = false
size = Vector2i(1920, 1080)
render_target_update_mode = 4

[node name="InCamera" type="Camera3D" parent="CameraPivot/OutsideFade/SubViewport"]
unique_name_in_owner = true
cull_mask = 1048568
projection = 1
size = 14.0
near = 0.001
far = 280.04
script = SubResource("GDScript_8giqv")

[node name="AO Decal" type="Decal" parent="."]
layers = 4
size = Vector3(1, 2.56184, 1)
texture_albedo = ExtResource("3_s0417")
upper_fade = 2.85409
lower_fade = 2.85409
cull_mask = 1048574

[node name="UI" parent="." instance=ExtResource("4_mdx2w")]
unique_name_in_owner = true
process_mode = 3

[node name="SprintDecal" type="Decal" parent="."]
unique_name_in_owner = true
top_level = true
size = Vector3(1, 0.66, 1)
texture_albedo = SubResource("GradientTexture2D_2wbcu")
upper_fade = 0.15
lower_fade = 0.15

[node name="Stats" type="Node" parent="."]
unique_name_in_owner = true
script = ExtResource("5_hi0eq")

[node name="InteractManager" type="Node" parent="."]
unique_name_in_owner = true
script = SubResource("GDScript_c6h3w")

[node name="InteractRay" type="RayCast3D" parent="InteractManager"]
unique_name_in_owner = true
transform = Transform3D(0.707107, 0.5, -0.5, -4.21471e-08, 0.707107, 0.707107, 0.707107, -0.5, 0.5, -11.7636, 16.6363, 11.7637)
collide_with_areas = true
collide_with_bodies = false
script = SubResource("GDScript_pbuh2")

[connection signal="entered_door" from="." to="CameraPivot/OutsideFade" method="_on_player_entered_door"]
[connection signal="exited_door" from="." to="CameraPivot/OutsideFade" method="_on_player_exited_door"]
[connection signal="mode_changed" from="." to="InteractManager" method="_on_player_mode_changed"]
[connection signal="stat_changed" from="Stats" to="UI" method="_on_stats_stat_changed"]
[connection signal="dialogue_end" from="InteractManager" to="." method="_on_interact_manager_dialogue_end"]
[connection signal="dialogue_start" from="InteractManager" to="." method="_on_interact_manager_dialogue_start"]
