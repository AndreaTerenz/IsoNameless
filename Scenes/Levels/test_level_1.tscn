[gd_scene load_steps=19 format=3 uid="uid://xxlp26s1av6w"]

[ext_resource type="PackedScene" uid="uid://wja52f18klx4" path="res://Assets/Models/Levels/test_level_1.blend" id="1_blvs2"]
[ext_resource type="Material" uid="uid://bpx67m1nldfe" path="res://Materials/Grids/black_grid.tres" id="2_goaju"]
[ext_resource type="Environment" uid="uid://bqyqg4xr6e0aj" path="res://default_env.tres" id="2_je60b"]
[ext_resource type="Script" path="res://Scripts/Level.gd" id="2_npikm"]
[ext_resource type="Material" uid="uid://0asu4367xipf" path="res://Materials/Grids/red_grid.tres" id="3_qu1om"]
[ext_resource type="Material" uid="uid://dxkr3knpjdqi6" path="res://Materials/Grids/yellow_grid.tres" id="4_jxqma"]
[ext_resource type="PackedScene" uid="uid://bq5xdgw0ai7g0" path="res://Scenes/Player.tscn" id="6_4v2tq"]
[ext_resource type="Material" uid="uid://r4utfykrmpew" path="res://Materials/Grids/white_grid.tres" id="9_kep4t"]
[ext_resource type="Material" uid="uid://cr6t6bvgx0uic" path="res://Materials/Grids/green_grid.tres" id="10_i710y"]

[sub_resource type="GDScript" id="GDScript_28iu5"]
script/source = "extends Interactable

@onready
var highliht_mesh := $Highlight

func _ready():
	super._ready()
	toggle_hightlight(false)

func _on_player_entered():
	toggle_hightlight(true)

func _on_player_exited():
	toggle_hightlight(false)
	
func _on_interact():
	toggle_hightlight(false)

func toggle_hightlight(t: bool):
	highliht_mesh.visible = t
"

[sub_resource type="SphereShape3D" id="SphereShape3D_ocax4"]
radius = 0.7

[sub_resource type="SphereMesh" id="SphereMesh_wnr12"]

[sub_resource type="SphereShape3D" id="SphereShape3D_6kff6"]

[sub_resource type="SphereMesh" id="SphereMesh_kov2j"]
radius = 0.7
height = 1.4

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_hrev2"]
transparency = 1
cull_mode = 1
disable_ambient_light = true
albedo_color = Color(0.588235, 0.101961, 0.101961, 0.584314)
emission_enabled = true
emission = Color(0.717647, 0, 0, 1)
emission_energy_multiplier = 11.86

[sub_resource type="GDScript" id="GDScript_ccnij"]
script/source = "extends Area3D

enum DOOR_DIR {
	X,Y,Z,nX,nY,nZ
}

@export var outside_env : Node3D
@export var outside_mesh : GeometryInstance3D
@export var inside_mesh : GeometryInstance3D
@export var direction : DOOR_DIR = DOOR_DIR.Z

@onready
var shape := $CollisionShape3D

var outside_face : Vector3
var inside_face : Vector3
var door_depth := 0.
var inside := false
var dir_vec :
	get:
		return dir_to_vec3(direction)
var local_player_pos:
	get:
		return shape.to_local(Globals.player.global_position) + outside_face

func _ready():
	if not Globals.started:
		await Globals.level_started

	var shape_size := (shape.shape as BoxShape3D).size
	
	outside_face = dir_vec * (shape_size / 2.)
	inside_face = outside_face * -1.
	door_depth = get_pos_depth(inside_face)
	
	body_entered.connect(
		func (body):
			if body == Globals.player:
				inside = true
	)
	
	body_exited.connect(
		func (body):
			if body != Globals.player:
				return
			
			Globals.log_msg(\"EXITED\")
			inside = false
			outside_mesh.transparency = round(outside_mesh.transparency)
	)
	
func _process(delta):
	if not inside:
		return
	
	var p_pos : Vector3 = (local_player_pos) * dir_to_vec3(direction)
	var p_depth : float = get_pos_depth(p_pos)
	
	var factor : float = clampf(p_depth / door_depth, 0., 1.)
	outside_mesh.transparency = 1. - factor

func face_closest_to_pos(p: Vector3) -> Vector3:
	var out_dist := p.distance_squared_to(outside_face)
	var in_dist := p.distance_squared_to(inside_face)
	
	if out_dist < in_dist:
		return outside_face
	elif out_dist > in_dist:
		return inside_face
	
	return Vector3.ZERO
	
func get_pos_depth(p: Vector3) -> float:
	if Utils.length_geq(p, door_depth/2.):
		p = (face_closest_to_pos(p))
		
	return ((outside_face - p) * dir_vec).length()

func dir_to_vec3(dir: DOOR_DIR) -> Vector3:
	match dir:
		DOOR_DIR.X:
			return Vector3.RIGHT
		DOOR_DIR.Y:
			return Vector3.UP
		DOOR_DIR.Z:
			return Vector3.BACK
		DOOR_DIR.nX:
			return Vector3.LEFT
		DOOR_DIR.nY:
			return Vector3.DOWN
		DOOR_DIR.nZ:
			return Vector3.FORWARD

	return Vector3.ZERO
"

[sub_resource type="BoxShape3D" id="BoxShape3D_hapeh"]

[sub_resource type="BoxMesh" id="BoxMesh_nymqc"]

[node name="test_level_1" instance=ExtResource("1_blvs2")]
script = ExtResource("2_npikm")

[node name="Player" parent="." index="0" instance=ExtResource("6_4v2tq")]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 12.2825, -4.76837e-07, -19.0995)

[node name="Target" type="Area3D" parent="." index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 4.79748, 0)
script = SubResource("GDScript_28iu5")
mode = 2
metadata/_edit_group_ = true

[node name="CollisionShape3D" type="CollisionShape3D" parent="Target" index="0"]
shape = SubResource("SphereShape3D_ocax4")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Target" index="1"]
layers = 2
material_override = ExtResource("10_i710y")
mesh = SubResource("SphereMesh_wnr12")
skeleton = NodePath("../..")

[node name="StaticBody3D" type="StaticBody3D" parent="Target/MeshInstance3D" index="0"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Target/MeshInstance3D/StaticBody3D" index="0"]
shape = SubResource("SphereShape3D_6kff6")

[node name="Highlight" type="MeshInstance3D" parent="Target" index="2"]
mesh = SubResource("SphereMesh_kov2j")
surface_material_override/0 = SubResource("StandardMaterial3D_hrev2")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="." index="2"]
transform = Transform3D(-0.566755, -0.576082, 0.588998, -0.296208, 0.809576, 0.506801, -0.768798, 0.112766, -0.629471, 0, 0, 0)
visible = false
shadow_enabled = true
directional_shadow_mode = 0
directional_shadow_blend_splits = true

[node name="WorldEnvironment" type="WorldEnvironment" parent="." index="3"]
environment = ExtResource("2_je60b")

[node name="Ground" parent="Env" index="0"]
layers = 5
material_override = ExtResource("2_goaju")
surface_material_override/0 = ExtResource("3_qu1om")

[node name="Platform" parent="Env" index="1"]
layers = 5
surface_material_override/0 = ExtResource("4_jxqma")

[node name="Ramp" parent="Env" index="2"]
layers = 5
material_override = ExtResource("3_qu1om")
surface_material_override/0 = ExtResource("4_jxqma")

[node name="Room" parent="Env" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 17.7507, 1.00004, -8.31769)
surface_material_override/0 = ExtResource("10_i710y")

[node name="Door" type="Area3D" parent="Env/Room/DoorPos" index="0" node_paths=PackedStringArray("outside_env", "outside_mesh", "inside_mesh")]
transform = Transform3D(1.98881, 0, 0, 0, 2.41838, 0, 0, 0, 0.580491, 0, 0, 0)
script = SubResource("GDScript_ccnij")
outside_env = NodePath("../../..")
outside_mesh = NodePath("../..")
inside_mesh = NodePath("../../Room_In")
direction = 5

[node name="CollisionShape3D" type="CollisionShape3D" parent="Env/Room/DoorPos/Door" index="0"]
shape = SubResource("BoxShape3D_hapeh")
metadata/_edit_lock_ = true

[node name="MeshInstance3D" type="MeshInstance3D" parent="Env/Room/DoorPos/Door" index="1"]
visible = false
transparency = 0.26
mesh = SubResource("BoxMesh_nymqc")
surface_material_override/0 = ExtResource("3_qu1om")
metadata/_edit_lock_ = true

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="Env/Room/DoorPos/Door" index="2"]

[node name="CSGBox3D" type="CSGBox3D" parent="Env/Room/DoorPos/Door/CSGCombiner3D" index="0"]
size = Vector3(1, 1, 0.250596)
material = ExtResource("3_qu1om")

[node name="CSGBox3D2" type="CSGBox3D" parent="Env/Room/DoorPos/Door/CSGCombiner3D" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.0600171, 0)
operation = 2
size = Vector3(0.806643, 1.0001, 1)
material = ExtResource("3_qu1om")

[node name="Room_In" parent="Env/Room" index="1"]
surface_material_override/0 = ExtResource("9_kep4t")

[node name="Wall" parent="Env" index="4"]
material_override = ExtResource("9_kep4t")
surface_material_override/0 = ExtResource("2_goaju")
